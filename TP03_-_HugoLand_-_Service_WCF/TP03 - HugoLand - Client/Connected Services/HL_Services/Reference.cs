//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HugoWorld_Client.HL_Services {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompteJoueurDTO", Namespace="http://schemas.datacontract.org/2004/07/HugoWorld_WCF.DTOs")]
    [System.SerializableAttribute()]
    public partial class CompteJoueurDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CourrielField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HugoWorld_Client.HL_Services.HeroDTO[] HerosField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NomField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NomJoueurField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrenomField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TypeUtilisateurField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Courriel {
            get {
                return this.CourrielField;
            }
            set {
                if ((object.ReferenceEquals(this.CourrielField, value) != true)) {
                    this.CourrielField = value;
                    this.RaisePropertyChanged("Courriel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HugoWorld_Client.HL_Services.HeroDTO[] Heros {
            get {
                return this.HerosField;
            }
            set {
                if ((object.ReferenceEquals(this.HerosField, value) != true)) {
                    this.HerosField = value;
                    this.RaisePropertyChanged("Heros");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nom {
            get {
                return this.NomField;
            }
            set {
                if ((object.ReferenceEquals(this.NomField, value) != true)) {
                    this.NomField = value;
                    this.RaisePropertyChanged("Nom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NomJoueur {
            get {
                return this.NomJoueurField;
            }
            set {
                if ((object.ReferenceEquals(this.NomJoueurField, value) != true)) {
                    this.NomJoueurField = value;
                    this.RaisePropertyChanged("NomJoueur");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Prenom {
            get {
                return this.PrenomField;
            }
            set {
                if ((object.ReferenceEquals(this.PrenomField, value) != true)) {
                    this.PrenomField = value;
                    this.RaisePropertyChanged("Prenom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TypeUtilisateur {
            get {
                return this.TypeUtilisateurField;
            }
            set {
                if ((this.TypeUtilisateurField.Equals(value) != true)) {
                    this.TypeUtilisateurField = value;
                    this.RaisePropertyChanged("TypeUtilisateur");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HeroDTO", Namespace="http://schemas.datacontract.org/2004/07/HugoWorld_WCF.DTOs")]
    [System.SerializableAttribute()]
    public partial class HeroDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HugoWorld_Client.HL_Services.ClasseDTO ClasseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ClasseIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HugoWorld_Client.HL_Services.CompteJoueurDTO CompteJoueurField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CompteJoueurIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EstConnecteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ExperienceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HugoWorld_Client.HL_Services.InventaireHeroDTO[] InventaireHerosField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HugoWorld_Client.HL_Services.ItemDTO[] ItemsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HugoWorld_Client.HL_Services.MondeDTO MondeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MondeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NiveauField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NomHeroField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatDexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatIntField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatStrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatVitaliteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int xField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int yField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HugoWorld_Client.HL_Services.ClasseDTO Classe {
            get {
                return this.ClasseField;
            }
            set {
                if ((object.ReferenceEquals(this.ClasseField, value) != true)) {
                    this.ClasseField = value;
                    this.RaisePropertyChanged("Classe");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ClasseId {
            get {
                return this.ClasseIdField;
            }
            set {
                if ((this.ClasseIdField.Equals(value) != true)) {
                    this.ClasseIdField = value;
                    this.RaisePropertyChanged("ClasseId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HugoWorld_Client.HL_Services.CompteJoueurDTO CompteJoueur {
            get {
                return this.CompteJoueurField;
            }
            set {
                if ((object.ReferenceEquals(this.CompteJoueurField, value) != true)) {
                    this.CompteJoueurField = value;
                    this.RaisePropertyChanged("CompteJoueur");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompteJoueurId {
            get {
                return this.CompteJoueurIdField;
            }
            set {
                if ((this.CompteJoueurIdField.Equals(value) != true)) {
                    this.CompteJoueurIdField = value;
                    this.RaisePropertyChanged("CompteJoueurId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EstConnecte {
            get {
                return this.EstConnecteField;
            }
            set {
                if ((this.EstConnecteField.Equals(value) != true)) {
                    this.EstConnecteField = value;
                    this.RaisePropertyChanged("EstConnecte");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Experience {
            get {
                return this.ExperienceField;
            }
            set {
                if ((this.ExperienceField.Equals(value) != true)) {
                    this.ExperienceField = value;
                    this.RaisePropertyChanged("Experience");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HugoWorld_Client.HL_Services.InventaireHeroDTO[] InventaireHeros {
            get {
                return this.InventaireHerosField;
            }
            set {
                if ((object.ReferenceEquals(this.InventaireHerosField, value) != true)) {
                    this.InventaireHerosField = value;
                    this.RaisePropertyChanged("InventaireHeros");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HugoWorld_Client.HL_Services.ItemDTO[] Items {
            get {
                return this.ItemsField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemsField, value) != true)) {
                    this.ItemsField = value;
                    this.RaisePropertyChanged("Items");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HugoWorld_Client.HL_Services.MondeDTO Monde {
            get {
                return this.MondeField;
            }
            set {
                if ((object.ReferenceEquals(this.MondeField, value) != true)) {
                    this.MondeField = value;
                    this.RaisePropertyChanged("Monde");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MondeId {
            get {
                return this.MondeIdField;
            }
            set {
                if ((this.MondeIdField.Equals(value) != true)) {
                    this.MondeIdField = value;
                    this.RaisePropertyChanged("MondeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Niveau {
            get {
                return this.NiveauField;
            }
            set {
                if ((this.NiveauField.Equals(value) != true)) {
                    this.NiveauField = value;
                    this.RaisePropertyChanged("Niveau");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NomHero {
            get {
                return this.NomHeroField;
            }
            set {
                if ((object.ReferenceEquals(this.NomHeroField, value) != true)) {
                    this.NomHeroField = value;
                    this.RaisePropertyChanged("NomHero");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StatDex {
            get {
                return this.StatDexField;
            }
            set {
                if ((this.StatDexField.Equals(value) != true)) {
                    this.StatDexField = value;
                    this.RaisePropertyChanged("StatDex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StatInt {
            get {
                return this.StatIntField;
            }
            set {
                if ((this.StatIntField.Equals(value) != true)) {
                    this.StatIntField = value;
                    this.RaisePropertyChanged("StatInt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StatStr {
            get {
                return this.StatStrField;
            }
            set {
                if ((this.StatStrField.Equals(value) != true)) {
                    this.StatStrField = value;
                    this.RaisePropertyChanged("StatStr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StatVitalite {
            get {
                return this.StatVitaliteField;
            }
            set {
                if ((this.StatVitaliteField.Equals(value) != true)) {
                    this.StatVitaliteField = value;
                    this.RaisePropertyChanged("StatVitalite");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int x {
            get {
                return this.xField;
            }
            set {
                if ((this.xField.Equals(value) != true)) {
                    this.xField = value;
                    this.RaisePropertyChanged("x");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int y {
            get {
                return this.yField;
            }
            set {
                if ((this.yField.Equals(value) != true)) {
                    this.yField = value;
                    this.RaisePropertyChanged("y");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ClasseDTO", Namespace="http://schemas.datacontract.org/2004/07/HugoWorld_WCF.DTOs")]
    [System.SerializableAttribute()]
    public partial class ClasseDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MondeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NomClasseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatBaseDexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatBaseIntField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatBaseStrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatBaseVitaliteField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MondeId {
            get {
                return this.MondeIdField;
            }
            set {
                if ((this.MondeIdField.Equals(value) != true)) {
                    this.MondeIdField = value;
                    this.RaisePropertyChanged("MondeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NomClasse {
            get {
                return this.NomClasseField;
            }
            set {
                if ((object.ReferenceEquals(this.NomClasseField, value) != true)) {
                    this.NomClasseField = value;
                    this.RaisePropertyChanged("NomClasse");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StatBaseDex {
            get {
                return this.StatBaseDexField;
            }
            set {
                if ((this.StatBaseDexField.Equals(value) != true)) {
                    this.StatBaseDexField = value;
                    this.RaisePropertyChanged("StatBaseDex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StatBaseInt {
            get {
                return this.StatBaseIntField;
            }
            set {
                if ((this.StatBaseIntField.Equals(value) != true)) {
                    this.StatBaseIntField = value;
                    this.RaisePropertyChanged("StatBaseInt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StatBaseStr {
            get {
                return this.StatBaseStrField;
            }
            set {
                if ((this.StatBaseStrField.Equals(value) != true)) {
                    this.StatBaseStrField = value;
                    this.RaisePropertyChanged("StatBaseStr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StatBaseVitalite {
            get {
                return this.StatBaseVitaliteField;
            }
            set {
                if ((this.StatBaseVitaliteField.Equals(value) != true)) {
                    this.StatBaseVitaliteField = value;
                    this.RaisePropertyChanged("StatBaseVitalite");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MondeDTO", Namespace="http://schemas.datacontract.org/2004/07/HugoWorld_WCF.DTOs")]
    [System.SerializableAttribute()]
    public partial class MondeDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HugoWorld_Client.HL_Services.ClasseDTO[] ClassesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HugoWorld_Client.HL_Services.HeroDTO[] HerosField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HugoWorld_Client.HL_Services.ItemDTO[] ItemsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LimiteXField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LimiteYField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HugoWorld_Client.HL_Services.MonstreDTO[] MonstresField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HugoWorld_Client.HL_Services.ObjetMondeDTO[] ObjetMondesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HugoWorld_Client.HL_Services.ClasseDTO[] Classes {
            get {
                return this.ClassesField;
            }
            set {
                if ((object.ReferenceEquals(this.ClassesField, value) != true)) {
                    this.ClassesField = value;
                    this.RaisePropertyChanged("Classes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HugoWorld_Client.HL_Services.HeroDTO[] Heros {
            get {
                return this.HerosField;
            }
            set {
                if ((object.ReferenceEquals(this.HerosField, value) != true)) {
                    this.HerosField = value;
                    this.RaisePropertyChanged("Heros");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HugoWorld_Client.HL_Services.ItemDTO[] Items {
            get {
                return this.ItemsField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemsField, value) != true)) {
                    this.ItemsField = value;
                    this.RaisePropertyChanged("Items");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LimiteX {
            get {
                return this.LimiteXField;
            }
            set {
                if ((this.LimiteXField.Equals(value) != true)) {
                    this.LimiteXField = value;
                    this.RaisePropertyChanged("LimiteX");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LimiteY {
            get {
                return this.LimiteYField;
            }
            set {
                if ((this.LimiteYField.Equals(value) != true)) {
                    this.LimiteYField = value;
                    this.RaisePropertyChanged("LimiteY");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HugoWorld_Client.HL_Services.MonstreDTO[] Monstres {
            get {
                return this.MonstresField;
            }
            set {
                if ((object.ReferenceEquals(this.MonstresField, value) != true)) {
                    this.MonstresField = value;
                    this.RaisePropertyChanged("Monstres");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HugoWorld_Client.HL_Services.ObjetMondeDTO[] ObjetMondes {
            get {
                return this.ObjetMondesField;
            }
            set {
                if ((object.ReferenceEquals(this.ObjetMondesField, value) != true)) {
                    this.ObjetMondesField = value;
                    this.RaisePropertyChanged("ObjetMondes");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InventaireHeroDTO", Namespace="http://schemas.datacontract.org/2004/07/HugoWorld_WCF.DTOs")]
    [System.SerializableAttribute()]
    public partial class InventaireHeroDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HugoWorld_Client.HL_Services.HeroDTO HeroField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdHeroField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdInventaireHeroField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HugoWorld_Client.HL_Services.ItemDTO ItemField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ItemIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QuantiteField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HugoWorld_Client.HL_Services.HeroDTO Hero {
            get {
                return this.HeroField;
            }
            set {
                if ((object.ReferenceEquals(this.HeroField, value) != true)) {
                    this.HeroField = value;
                    this.RaisePropertyChanged("Hero");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdHero {
            get {
                return this.IdHeroField;
            }
            set {
                if ((this.IdHeroField.Equals(value) != true)) {
                    this.IdHeroField = value;
                    this.RaisePropertyChanged("IdHero");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdInventaireHero {
            get {
                return this.IdInventaireHeroField;
            }
            set {
                if ((this.IdInventaireHeroField.Equals(value) != true)) {
                    this.IdInventaireHeroField = value;
                    this.RaisePropertyChanged("IdInventaireHero");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HugoWorld_Client.HL_Services.ItemDTO Item {
            get {
                return this.ItemField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemField, value) != true)) {
                    this.ItemField = value;
                    this.RaisePropertyChanged("Item");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ItemId {
            get {
                return this.ItemIdField;
            }
            set {
                if ((this.ItemIdField.Equals(value) != true)) {
                    this.ItemIdField = value;
                    this.RaisePropertyChanged("ItemId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Quantite {
            get {
                return this.QuantiteField;
            }
            set {
                if ((this.QuantiteField.Equals(value) != true)) {
                    this.QuantiteField = value;
                    this.RaisePropertyChanged("Quantite");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ItemDTO", Namespace="http://schemas.datacontract.org/2004/07/HugoWorld_WCF.DTOs")]
    [System.SerializableAttribute()]
    public partial class ItemDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HugoWorld_Client.HL_Services.EffetItemDTO[] EffetsItemsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HugoWorld_Client.HL_Services.HeroDTO HeroField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IdHeroField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ImageIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HugoWorld_Client.HL_Services.InventaireHeroDTO[] InventaireHeroDTOsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HugoWorld_Client.HL_Services.MondeDTO MondeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MondeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NomField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] RowVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> xField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> yField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HugoWorld_Client.HL_Services.EffetItemDTO[] EffetsItems {
            get {
                return this.EffetsItemsField;
            }
            set {
                if ((object.ReferenceEquals(this.EffetsItemsField, value) != true)) {
                    this.EffetsItemsField = value;
                    this.RaisePropertyChanged("EffetsItems");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HugoWorld_Client.HL_Services.HeroDTO Hero {
            get {
                return this.HeroField;
            }
            set {
                if ((object.ReferenceEquals(this.HeroField, value) != true)) {
                    this.HeroField = value;
                    this.RaisePropertyChanged("Hero");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> IdHero {
            get {
                return this.IdHeroField;
            }
            set {
                if ((this.IdHeroField.Equals(value) != true)) {
                    this.IdHeroField = value;
                    this.RaisePropertyChanged("IdHero");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ImageId {
            get {
                return this.ImageIdField;
            }
            set {
                if ((this.ImageIdField.Equals(value) != true)) {
                    this.ImageIdField = value;
                    this.RaisePropertyChanged("ImageId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HugoWorld_Client.HL_Services.InventaireHeroDTO[] InventaireHeroDTOs {
            get {
                return this.InventaireHeroDTOsField;
            }
            set {
                if ((object.ReferenceEquals(this.InventaireHeroDTOsField, value) != true)) {
                    this.InventaireHeroDTOsField = value;
                    this.RaisePropertyChanged("InventaireHeroDTOs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HugoWorld_Client.HL_Services.MondeDTO Monde {
            get {
                return this.MondeField;
            }
            set {
                if ((object.ReferenceEquals(this.MondeField, value) != true)) {
                    this.MondeField = value;
                    this.RaisePropertyChanged("Monde");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MondeId {
            get {
                return this.MondeIdField;
            }
            set {
                if ((this.MondeIdField.Equals(value) != true)) {
                    this.MondeIdField = value;
                    this.RaisePropertyChanged("MondeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nom {
            get {
                return this.NomField;
            }
            set {
                if ((object.ReferenceEquals(this.NomField, value) != true)) {
                    this.NomField = value;
                    this.RaisePropertyChanged("Nom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] RowVersion {
            get {
                return this.RowVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.RowVersionField, value) != true)) {
                    this.RowVersionField = value;
                    this.RaisePropertyChanged("RowVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> x {
            get {
                return this.xField;
            }
            set {
                if ((this.xField.Equals(value) != true)) {
                    this.xField = value;
                    this.RaisePropertyChanged("x");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> y {
            get {
                return this.yField;
            }
            set {
                if ((this.yField.Equals(value) != true)) {
                    this.yField = value;
                    this.RaisePropertyChanged("y");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EffetItemDTO", Namespace="http://schemas.datacontract.org/2004/07/HugoWorld_WCF.DTOs")]
    [System.SerializableAttribute()]
    public partial class EffetItemDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HugoWorld_Client.HL_Services.ItemDTO ItemField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ItemIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TypeEffetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ValeurEffetField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HugoWorld_Client.HL_Services.ItemDTO Item {
            get {
                return this.ItemField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemField, value) != true)) {
                    this.ItemField = value;
                    this.RaisePropertyChanged("Item");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ItemId {
            get {
                return this.ItemIdField;
            }
            set {
                if ((this.ItemIdField.Equals(value) != true)) {
                    this.ItemIdField = value;
                    this.RaisePropertyChanged("ItemId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TypeEffet {
            get {
                return this.TypeEffetField;
            }
            set {
                if ((this.TypeEffetField.Equals(value) != true)) {
                    this.TypeEffetField = value;
                    this.RaisePropertyChanged("TypeEffet");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ValeurEffet {
            get {
                return this.ValeurEffetField;
            }
            set {
                if ((this.ValeurEffetField.Equals(value) != true)) {
                    this.ValeurEffetField = value;
                    this.RaisePropertyChanged("ValeurEffet");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MonstreDTO", Namespace="http://schemas.datacontract.org/2004/07/HugoWorld_WCF.DTOs")]
    [System.SerializableAttribute()]
    public partial class MonstreDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ImageIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HugoWorld_Client.HL_Services.MondeDTO MondeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MondeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NiveauField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NomField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float StatDmgMaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float StatDmgMinField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatPVField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int xField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int yField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ImageId {
            get {
                return this.ImageIdField;
            }
            set {
                if ((this.ImageIdField.Equals(value) != true)) {
                    this.ImageIdField = value;
                    this.RaisePropertyChanged("ImageId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HugoWorld_Client.HL_Services.MondeDTO Monde {
            get {
                return this.MondeField;
            }
            set {
                if ((object.ReferenceEquals(this.MondeField, value) != true)) {
                    this.MondeField = value;
                    this.RaisePropertyChanged("Monde");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MondeId {
            get {
                return this.MondeIdField;
            }
            set {
                if ((this.MondeIdField.Equals(value) != true)) {
                    this.MondeIdField = value;
                    this.RaisePropertyChanged("MondeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Niveau {
            get {
                return this.NiveauField;
            }
            set {
                if ((this.NiveauField.Equals(value) != true)) {
                    this.NiveauField = value;
                    this.RaisePropertyChanged("Niveau");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nom {
            get {
                return this.NomField;
            }
            set {
                if ((object.ReferenceEquals(this.NomField, value) != true)) {
                    this.NomField = value;
                    this.RaisePropertyChanged("Nom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float StatDmgMax {
            get {
                return this.StatDmgMaxField;
            }
            set {
                if ((this.StatDmgMaxField.Equals(value) != true)) {
                    this.StatDmgMaxField = value;
                    this.RaisePropertyChanged("StatDmgMax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float StatDmgMin {
            get {
                return this.StatDmgMinField;
            }
            set {
                if ((this.StatDmgMinField.Equals(value) != true)) {
                    this.StatDmgMinField = value;
                    this.RaisePropertyChanged("StatDmgMin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StatPV {
            get {
                return this.StatPVField;
            }
            set {
                if ((this.StatPVField.Equals(value) != true)) {
                    this.StatPVField = value;
                    this.RaisePropertyChanged("StatPV");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int x {
            get {
                return this.xField;
            }
            set {
                if ((this.xField.Equals(value) != true)) {
                    this.xField = value;
                    this.RaisePropertyChanged("x");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int y {
            get {
                return this.yField;
            }
            set {
                if ((this.yField.Equals(value) != true)) {
                    this.yField = value;
                    this.RaisePropertyChanged("y");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ObjetMondeDTO", Namespace="http://schemas.datacontract.org/2004/07/HugoWorld_WCF.DTOs")]
    [System.SerializableAttribute()]
    public partial class ObjetMondeDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ImageIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsBlockField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HugoWorld_Client.HL_Services.MondeDTO MondeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MondeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TypeObjetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int xField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int yField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ImageId {
            get {
                return this.ImageIdField;
            }
            set {
                if ((this.ImageIdField.Equals(value) != true)) {
                    this.ImageIdField = value;
                    this.RaisePropertyChanged("ImageId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsBlock {
            get {
                return this.IsBlockField;
            }
            set {
                if ((this.IsBlockField.Equals(value) != true)) {
                    this.IsBlockField = value;
                    this.RaisePropertyChanged("IsBlock");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HugoWorld_Client.HL_Services.MondeDTO Monde {
            get {
                return this.MondeField;
            }
            set {
                if ((object.ReferenceEquals(this.MondeField, value) != true)) {
                    this.MondeField = value;
                    this.RaisePropertyChanged("Monde");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MondeId {
            get {
                return this.MondeIdField;
            }
            set {
                if ((this.MondeIdField.Equals(value) != true)) {
                    this.MondeIdField = value;
                    this.RaisePropertyChanged("MondeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TypeObjet {
            get {
                return this.TypeObjetField;
            }
            set {
                if ((this.TypeObjetField.Equals(value) != true)) {
                    this.TypeObjetField = value;
                    this.RaisePropertyChanged("TypeObjet");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int x {
            get {
                return this.xField;
            }
            set {
                if ((this.xField.Equals(value) != true)) {
                    this.xField = value;
                    this.RaisePropertyChanged("x");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int y {
            get {
                return this.yField;
            }
            set {
                if ((this.yField.Equals(value) != true)) {
                    this.yField = value;
                    this.RaisePropertyChanged("y");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TileImport", Namespace="http://schemas.datacontract.org/2004/07/HugoWorld_WCF.Models")]
    [System.SerializableAttribute()]
    public partial class TileImport : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int HealthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] RowVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HugoWorld_Client.HL_Services.TypeTile TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int maxDMGField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int minDMGField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string tileIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int xField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int yField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Health {
            get {
                return this.HealthField;
            }
            set {
                if ((this.HealthField.Equals(value) != true)) {
                    this.HealthField = value;
                    this.RaisePropertyChanged("Health");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] RowVersion {
            get {
                return this.RowVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.RowVersionField, value) != true)) {
                    this.RowVersionField = value;
                    this.RaisePropertyChanged("RowVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HugoWorld_Client.HL_Services.TypeTile Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int maxDMG {
            get {
                return this.maxDMGField;
            }
            set {
                if ((this.maxDMGField.Equals(value) != true)) {
                    this.maxDMGField = value;
                    this.RaisePropertyChanged("maxDMG");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int minDMG {
            get {
                return this.minDMGField;
            }
            set {
                if ((this.minDMGField.Equals(value) != true)) {
                    this.minDMGField = value;
                    this.RaisePropertyChanged("minDMG");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string tileID {
            get {
                return this.tileIDField;
            }
            set {
                if ((object.ReferenceEquals(this.tileIDField, value) != true)) {
                    this.tileIDField = value;
                    this.RaisePropertyChanged("tileID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int x {
            get {
                return this.xField;
            }
            set {
                if ((this.xField.Equals(value) != true)) {
                    this.xField = value;
                    this.RaisePropertyChanged("x");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int y {
            get {
                return this.yField;
            }
            set {
                if ((this.yField.Equals(value) != true)) {
                    this.yField = value;
                    this.RaisePropertyChanged("y");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TypeTile", Namespace="http://schemas.datacontract.org/2004/07/HugoWorld_WCF.Models")]
    public enum TypeTile : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ObjetMonde = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Monstre = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Item = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ClasseHero = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Tile = 4,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="HL_Services.IJoueurService")]
    public interface IJoueurService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJoueurService/Connection", ReplyAction="http://tempuri.org/IJoueurService/ConnectionResponse")]
        string Connection(string p_Username, string p_Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJoueurService/Connection", ReplyAction="http://tempuri.org/IJoueurService/ConnectionResponse")]
        System.Threading.Tasks.Task<string> ConnectionAsync(string p_Username, string p_Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJoueurService/EditAccount", ReplyAction="http://tempuri.org/IJoueurService/EditAccountResponse")]
        void EditAccount(HugoWorld_Client.HL_Services.CompteJoueurDTO compteJoueurDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJoueurService/EditAccount", ReplyAction="http://tempuri.org/IJoueurService/EditAccountResponse")]
        System.Threading.Tasks.Task EditAccountAsync(HugoWorld_Client.HL_Services.CompteJoueurDTO compteJoueurDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJoueurService/GetHeroesByAccountId", ReplyAction="http://tempuri.org/IJoueurService/GetHeroesByAccountIdResponse")]
        HugoWorld_Client.HL_Services.HeroDTO[] GetHeroesByAccountId(int p_Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJoueurService/GetHeroesByAccountId", ReplyAction="http://tempuri.org/IJoueurService/GetHeroesByAccountIdResponse")]
        System.Threading.Tasks.Task<HugoWorld_Client.HL_Services.HeroDTO[]> GetHeroesByAccountIdAsync(int p_Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJoueurService/GetAccountByName", ReplyAction="http://tempuri.org/IJoueurService/GetAccountByNameResponse")]
        HugoWorld_Client.HL_Services.CompteJoueurDTO GetAccountByName(string p_Username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJoueurService/GetAccountByName", ReplyAction="http://tempuri.org/IJoueurService/GetAccountByNameResponse")]
        System.Threading.Tasks.Task<HugoWorld_Client.HL_Services.CompteJoueurDTO> GetAccountByNameAsync(string p_Username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJoueurService/ConvertToHerosDTO", ReplyAction="http://tempuri.org/IJoueurService/ConvertToHerosDTOResponse")]
        HugoWorld_Client.HL_Services.HeroDTO[] ConvertToHerosDTO(TP01_Library.Models.Hero[] heroes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJoueurService/ConvertToHerosDTO", ReplyAction="http://tempuri.org/IJoueurService/ConvertToHerosDTOResponse")]
        System.Threading.Tasks.Task<HugoWorld_Client.HL_Services.HeroDTO[]> ConvertToHerosDTOAsync(TP01_Library.Models.Hero[] heroes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJoueurService/ConvertToClassesDTO", ReplyAction="http://tempuri.org/IJoueurService/ConvertToClassesDTOResponse")]
        HugoWorld_Client.HL_Services.ClasseDTO[] ConvertToClassesDTO(TP01_Library.Models.Classe[] classes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJoueurService/ConvertToClassesDTO", ReplyAction="http://tempuri.org/IJoueurService/ConvertToClassesDTOResponse")]
        System.Threading.Tasks.Task<HugoWorld_Client.HL_Services.ClasseDTO[]> ConvertToClassesDTOAsync(TP01_Library.Models.Classe[] classes);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IJoueurServiceChannel : HugoWorld_Client.HL_Services.IJoueurService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class JoueurServiceClient : System.ServiceModel.ClientBase<HugoWorld_Client.HL_Services.IJoueurService>, HugoWorld_Client.HL_Services.IJoueurService {
        
        public JoueurServiceClient() {
        }
        
        public JoueurServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public JoueurServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public JoueurServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public JoueurServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string Connection(string p_Username, string p_Password) {
            return base.Channel.Connection(p_Username, p_Password);
        }
        
        public System.Threading.Tasks.Task<string> ConnectionAsync(string p_Username, string p_Password) {
            return base.Channel.ConnectionAsync(p_Username, p_Password);
        }
        
        public void EditAccount(HugoWorld_Client.HL_Services.CompteJoueurDTO compteJoueurDTO) {
            base.Channel.EditAccount(compteJoueurDTO);
        }
        
        public System.Threading.Tasks.Task EditAccountAsync(HugoWorld_Client.HL_Services.CompteJoueurDTO compteJoueurDTO) {
            return base.Channel.EditAccountAsync(compteJoueurDTO);
        }
        
        public HugoWorld_Client.HL_Services.HeroDTO[] GetHeroesByAccountId(int p_Id) {
            return base.Channel.GetHeroesByAccountId(p_Id);
        }
        
        public System.Threading.Tasks.Task<HugoWorld_Client.HL_Services.HeroDTO[]> GetHeroesByAccountIdAsync(int p_Id) {
            return base.Channel.GetHeroesByAccountIdAsync(p_Id);
        }
        
        public HugoWorld_Client.HL_Services.CompteJoueurDTO GetAccountByName(string p_Username) {
            return base.Channel.GetAccountByName(p_Username);
        }
        
        public System.Threading.Tasks.Task<HugoWorld_Client.HL_Services.CompteJoueurDTO> GetAccountByNameAsync(string p_Username) {
            return base.Channel.GetAccountByNameAsync(p_Username);
        }
        
        public HugoWorld_Client.HL_Services.HeroDTO[] ConvertToHerosDTO(TP01_Library.Models.Hero[] heroes) {
            return base.Channel.ConvertToHerosDTO(heroes);
        }
        
        public System.Threading.Tasks.Task<HugoWorld_Client.HL_Services.HeroDTO[]> ConvertToHerosDTOAsync(TP01_Library.Models.Hero[] heroes) {
            return base.Channel.ConvertToHerosDTOAsync(heroes);
        }
        
        public HugoWorld_Client.HL_Services.ClasseDTO[] ConvertToClassesDTO(TP01_Library.Models.Classe[] classes) {
            return base.Channel.ConvertToClassesDTO(classes);
        }
        
        public System.Threading.Tasks.Task<HugoWorld_Client.HL_Services.ClasseDTO[]> ConvertToClassesDTOAsync(TP01_Library.Models.Classe[] classes) {
            return base.Channel.ConvertToClassesDTOAsync(classes);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="HL_Services.IMondeService")]
    public interface IMondeService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMondeService/GetMondeDTOs", ReplyAction="http://tempuri.org/IMondeService/GetMondeDTOsResponse")]
        HugoWorld_Client.HL_Services.MondeDTO[] GetMondeDTOs();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMondeService/GetMondeDTOs", ReplyAction="http://tempuri.org/IMondeService/GetMondeDTOsResponse")]
        System.Threading.Tasks.Task<HugoWorld_Client.HL_Services.MondeDTO[]> GetMondeDTOsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMondeService/GetWorldsForSelection", ReplyAction="http://tempuri.org/IMondeService/GetWorldsForSelectionResponse")]
        HugoWorld_Client.HL_Services.MondeDTO[] GetWorldsForSelection();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMondeService/GetWorldsForSelection", ReplyAction="http://tempuri.org/IMondeService/GetWorldsForSelectionResponse")]
        System.Threading.Tasks.Task<HugoWorld_Client.HL_Services.MondeDTO[]> GetWorldsForSelectionAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMondeService/GetWorldByHero", ReplyAction="http://tempuri.org/IMondeService/GetWorldByHeroResponse")]
        HugoWorld_Client.HL_Services.MondeDTO GetWorldByHero(HugoWorld_Client.HL_Services.HeroDTO p_Hero);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMondeService/GetWorldByHero", ReplyAction="http://tempuri.org/IMondeService/GetWorldByHeroResponse")]
        System.Threading.Tasks.Task<HugoWorld_Client.HL_Services.MondeDTO> GetWorldByHeroAsync(HugoWorld_Client.HL_Services.HeroDTO p_Hero);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMondeService/GetChunk", ReplyAction="http://tempuri.org/IMondeService/GetChunkResponse")]
        HugoWorld_Client.HL_Services.TileImport[] GetChunk(int[] TopLeft, int[] BotRight, HugoWorld_Client.HL_Services.MondeDTO p_world);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMondeService/GetChunk", ReplyAction="http://tempuri.org/IMondeService/GetChunkResponse")]
        System.Threading.Tasks.Task<HugoWorld_Client.HL_Services.TileImport[]> GetChunkAsync(int[] TopLeft, int[] BotRight, HugoWorld_Client.HL_Services.MondeDTO p_world);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMondeServiceChannel : HugoWorld_Client.HL_Services.IMondeService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MondeServiceClient : System.ServiceModel.ClientBase<HugoWorld_Client.HL_Services.IMondeService>, HugoWorld_Client.HL_Services.IMondeService {
        
        public MondeServiceClient() {
        }
        
        public MondeServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MondeServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MondeServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MondeServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public HugoWorld_Client.HL_Services.MondeDTO[] GetMondeDTOs() {
            return base.Channel.GetMondeDTOs();
        }
        
        public System.Threading.Tasks.Task<HugoWorld_Client.HL_Services.MondeDTO[]> GetMondeDTOsAsync() {
            return base.Channel.GetMondeDTOsAsync();
        }
        
        public HugoWorld_Client.HL_Services.MondeDTO[] GetWorldsForSelection() {
            return base.Channel.GetWorldsForSelection();
        }
        
        public System.Threading.Tasks.Task<HugoWorld_Client.HL_Services.MondeDTO[]> GetWorldsForSelectionAsync() {
            return base.Channel.GetWorldsForSelectionAsync();
        }
        
        public HugoWorld_Client.HL_Services.MondeDTO GetWorldByHero(HugoWorld_Client.HL_Services.HeroDTO p_Hero) {
            return base.Channel.GetWorldByHero(p_Hero);
        }
        
        public System.Threading.Tasks.Task<HugoWorld_Client.HL_Services.MondeDTO> GetWorldByHeroAsync(HugoWorld_Client.HL_Services.HeroDTO p_Hero) {
            return base.Channel.GetWorldByHeroAsync(p_Hero);
        }
        
        public HugoWorld_Client.HL_Services.TileImport[] GetChunk(int[] TopLeft, int[] BotRight, HugoWorld_Client.HL_Services.MondeDTO p_world) {
            return base.Channel.GetChunk(TopLeft, BotRight, p_world);
        }
        
        public System.Threading.Tasks.Task<HugoWorld_Client.HL_Services.TileImport[]> GetChunkAsync(int[] TopLeft, int[] BotRight, HugoWorld_Client.HL_Services.MondeDTO p_world) {
            return base.Channel.GetChunkAsync(TopLeft, BotRight, p_world);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="HL_Services.IClasseService")]
    public interface IClasseService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClasseService/AddClassToDataBase", ReplyAction="http://tempuri.org/IClasseService/AddClassToDataBaseResponse")]
        void AddClassToDataBase(HugoWorld_Client.HL_Services.ClasseDTO classeDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClasseService/AddClassToDataBase", ReplyAction="http://tempuri.org/IClasseService/AddClassToDataBaseResponse")]
        System.Threading.Tasks.Task AddClassToDataBaseAsync(HugoWorld_Client.HL_Services.ClasseDTO classeDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClasseService/GetClasseDTOs", ReplyAction="http://tempuri.org/IClasseService/GetClasseDTOsResponse")]
        HugoWorld_Client.HL_Services.ClasseDTO[] GetClasseDTOs();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClasseService/GetClasseDTOs", ReplyAction="http://tempuri.org/IClasseService/GetClasseDTOsResponse")]
        System.Threading.Tasks.Task<HugoWorld_Client.HL_Services.ClasseDTO[]> GetClasseDTOsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClasseService/EditClass", ReplyAction="http://tempuri.org/IClasseService/EditClassResponse")]
        void EditClass(HugoWorld_Client.HL_Services.ClasseDTO classeDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClasseService/EditClass", ReplyAction="http://tempuri.org/IClasseService/EditClassResponse")]
        System.Threading.Tasks.Task EditClassAsync(HugoWorld_Client.HL_Services.ClasseDTO classeDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClasseService/GetClassDTOFromMap", ReplyAction="http://tempuri.org/IClasseService/GetClassDTOFromMapResponse")]
        HugoWorld_Client.HL_Services.ClasseDTO[] GetClassDTOFromMap(int p_MapId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClasseService/GetClassDTOFromMap", ReplyAction="http://tempuri.org/IClasseService/GetClassDTOFromMapResponse")]
        System.Threading.Tasks.Task<HugoWorld_Client.HL_Services.ClasseDTO[]> GetClassDTOFromMapAsync(int p_MapId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClasseService/DeleteClass", ReplyAction="http://tempuri.org/IClasseService/DeleteClassResponse")]
        bool DeleteClass(HugoWorld_Client.HL_Services.ClasseDTO classeDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClasseService/DeleteClass", ReplyAction="http://tempuri.org/IClasseService/DeleteClassResponse")]
        System.Threading.Tasks.Task<bool> DeleteClassAsync(HugoWorld_Client.HL_Services.ClasseDTO classeDTO);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IClasseServiceChannel : HugoWorld_Client.HL_Services.IClasseService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ClasseServiceClient : System.ServiceModel.ClientBase<HugoWorld_Client.HL_Services.IClasseService>, HugoWorld_Client.HL_Services.IClasseService {
        
        public ClasseServiceClient() {
        }
        
        public ClasseServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ClasseServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ClasseServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ClasseServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void AddClassToDataBase(HugoWorld_Client.HL_Services.ClasseDTO classeDTO) {
            base.Channel.AddClassToDataBase(classeDTO);
        }
        
        public System.Threading.Tasks.Task AddClassToDataBaseAsync(HugoWorld_Client.HL_Services.ClasseDTO classeDTO) {
            return base.Channel.AddClassToDataBaseAsync(classeDTO);
        }
        
        public HugoWorld_Client.HL_Services.ClasseDTO[] GetClasseDTOs() {
            return base.Channel.GetClasseDTOs();
        }
        
        public System.Threading.Tasks.Task<HugoWorld_Client.HL_Services.ClasseDTO[]> GetClasseDTOsAsync() {
            return base.Channel.GetClasseDTOsAsync();
        }
        
        public void EditClass(HugoWorld_Client.HL_Services.ClasseDTO classeDTO) {
            base.Channel.EditClass(classeDTO);
        }
        
        public System.Threading.Tasks.Task EditClassAsync(HugoWorld_Client.HL_Services.ClasseDTO classeDTO) {
            return base.Channel.EditClassAsync(classeDTO);
        }
        
        public HugoWorld_Client.HL_Services.ClasseDTO[] GetClassDTOFromMap(int p_MapId) {
            return base.Channel.GetClassDTOFromMap(p_MapId);
        }
        
        public System.Threading.Tasks.Task<HugoWorld_Client.HL_Services.ClasseDTO[]> GetClassDTOFromMapAsync(int p_MapId) {
            return base.Channel.GetClassDTOFromMapAsync(p_MapId);
        }
        
        public bool DeleteClass(HugoWorld_Client.HL_Services.ClasseDTO classeDTO) {
            return base.Channel.DeleteClass(classeDTO);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteClassAsync(HugoWorld_Client.HL_Services.ClasseDTO classeDTO) {
            return base.Channel.DeleteClassAsync(classeDTO);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="HL_Services.IItemService")]
    public interface IItemService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IItemService/ConvertToItemsDTOs", ReplyAction="http://tempuri.org/IItemService/ConvertToItemsDTOsResponse")]
        HugoWorld_Client.HL_Services.ItemDTO[] ConvertToItemsDTOs(TP01_Library.Models.Item[] items);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IItemService/ConvertToItemsDTOs", ReplyAction="http://tempuri.org/IItemService/ConvertToItemsDTOsResponse")]
        System.Threading.Tasks.Task<HugoWorld_Client.HL_Services.ItemDTO[]> ConvertToItemsDTOsAsync(TP01_Library.Models.Item[] items);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IItemService/ConvertToEffetItemsDTOs", ReplyAction="http://tempuri.org/IItemService/ConvertToEffetItemsDTOsResponse")]
        HugoWorld_Client.HL_Services.EffetItemDTO[] ConvertToEffetItemsDTOs(TP01_Library.Models.EffetItem[] effetItems);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IItemService/ConvertToEffetItemsDTOs", ReplyAction="http://tempuri.org/IItemService/ConvertToEffetItemsDTOsResponse")]
        System.Threading.Tasks.Task<HugoWorld_Client.HL_Services.EffetItemDTO[]> ConvertToEffetItemsDTOsAsync(TP01_Library.Models.EffetItem[] effetItems);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IItemService/ConvertToInventaireHeroDTOs", ReplyAction="http://tempuri.org/IItemService/ConvertToInventaireHeroDTOsResponse")]
        HugoWorld_Client.HL_Services.InventaireHeroDTO[] ConvertToInventaireHeroDTOs(TP01_Library.Models.InventaireHero[] inventaireHeroes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IItemService/ConvertToInventaireHeroDTOs", ReplyAction="http://tempuri.org/IItemService/ConvertToInventaireHeroDTOsResponse")]
        System.Threading.Tasks.Task<HugoWorld_Client.HL_Services.InventaireHeroDTO[]> ConvertToInventaireHeroDTOsAsync(TP01_Library.Models.InventaireHero[] inventaireHeroes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IItemService/ConvertToMonstresDTOs", ReplyAction="http://tempuri.org/IItemService/ConvertToMonstresDTOsResponse")]
        HugoWorld_Client.HL_Services.MonstreDTO[] ConvertToMonstresDTOs(TP01_Library.Models.Monstre[] monstres);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IItemService/ConvertToMonstresDTOs", ReplyAction="http://tempuri.org/IItemService/ConvertToMonstresDTOsResponse")]
        System.Threading.Tasks.Task<HugoWorld_Client.HL_Services.MonstreDTO[]> ConvertToMonstresDTOsAsync(TP01_Library.Models.Monstre[] monstres);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IItemService/ConvertToObjetMondeDTOs", ReplyAction="http://tempuri.org/IItemService/ConvertToObjetMondeDTOsResponse")]
        HugoWorld_Client.HL_Services.ObjetMondeDTO[] ConvertToObjetMondeDTOs(TP01_Library.Models.ObjetMonde[] objetMondes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IItemService/ConvertToObjetMondeDTOs", ReplyAction="http://tempuri.org/IItemService/ConvertToObjetMondeDTOsResponse")]
        System.Threading.Tasks.Task<HugoWorld_Client.HL_Services.ObjetMondeDTO[]> ConvertToObjetMondeDTOsAsync(TP01_Library.Models.ObjetMonde[] objetMondes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IItemService/PickUpItem", ReplyAction="http://tempuri.org/IItemService/PickUpItemResponse")]
        HugoWorld_Client.HL_Services.ItemDTO PickUpItem(HugoWorld_Client.HL_Services.ItemDTO item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IItemService/PickUpItem", ReplyAction="http://tempuri.org/IItemService/PickUpItemResponse")]
        System.Threading.Tasks.Task<HugoWorld_Client.HL_Services.ItemDTO> PickUpItemAsync(HugoWorld_Client.HL_Services.ItemDTO item);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IItemServiceChannel : HugoWorld_Client.HL_Services.IItemService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ItemServiceClient : System.ServiceModel.ClientBase<HugoWorld_Client.HL_Services.IItemService>, HugoWorld_Client.HL_Services.IItemService {
        
        public ItemServiceClient() {
        }
        
        public ItemServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ItemServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ItemServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ItemServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public HugoWorld_Client.HL_Services.ItemDTO[] ConvertToItemsDTOs(TP01_Library.Models.Item[] items) {
            return base.Channel.ConvertToItemsDTOs(items);
        }
        
        public System.Threading.Tasks.Task<HugoWorld_Client.HL_Services.ItemDTO[]> ConvertToItemsDTOsAsync(TP01_Library.Models.Item[] items) {
            return base.Channel.ConvertToItemsDTOsAsync(items);
        }
        
        public HugoWorld_Client.HL_Services.EffetItemDTO[] ConvertToEffetItemsDTOs(TP01_Library.Models.EffetItem[] effetItems) {
            return base.Channel.ConvertToEffetItemsDTOs(effetItems);
        }
        
        public System.Threading.Tasks.Task<HugoWorld_Client.HL_Services.EffetItemDTO[]> ConvertToEffetItemsDTOsAsync(TP01_Library.Models.EffetItem[] effetItems) {
            return base.Channel.ConvertToEffetItemsDTOsAsync(effetItems);
        }
        
        public HugoWorld_Client.HL_Services.InventaireHeroDTO[] ConvertToInventaireHeroDTOs(TP01_Library.Models.InventaireHero[] inventaireHeroes) {
            return base.Channel.ConvertToInventaireHeroDTOs(inventaireHeroes);
        }
        
        public System.Threading.Tasks.Task<HugoWorld_Client.HL_Services.InventaireHeroDTO[]> ConvertToInventaireHeroDTOsAsync(TP01_Library.Models.InventaireHero[] inventaireHeroes) {
            return base.Channel.ConvertToInventaireHeroDTOsAsync(inventaireHeroes);
        }
        
        public HugoWorld_Client.HL_Services.MonstreDTO[] ConvertToMonstresDTOs(TP01_Library.Models.Monstre[] monstres) {
            return base.Channel.ConvertToMonstresDTOs(monstres);
        }
        
        public System.Threading.Tasks.Task<HugoWorld_Client.HL_Services.MonstreDTO[]> ConvertToMonstresDTOsAsync(TP01_Library.Models.Monstre[] monstres) {
            return base.Channel.ConvertToMonstresDTOsAsync(monstres);
        }
        
        public HugoWorld_Client.HL_Services.ObjetMondeDTO[] ConvertToObjetMondeDTOs(TP01_Library.Models.ObjetMonde[] objetMondes) {
            return base.Channel.ConvertToObjetMondeDTOs(objetMondes);
        }
        
        public System.Threading.Tasks.Task<HugoWorld_Client.HL_Services.ObjetMondeDTO[]> ConvertToObjetMondeDTOsAsync(TP01_Library.Models.ObjetMonde[] objetMondes) {
            return base.Channel.ConvertToObjetMondeDTOsAsync(objetMondes);
        }
        
        public HugoWorld_Client.HL_Services.ItemDTO PickUpItem(HugoWorld_Client.HL_Services.ItemDTO item) {
            return base.Channel.PickUpItem(item);
        }
        
        public System.Threading.Tasks.Task<HugoWorld_Client.HL_Services.ItemDTO> PickUpItemAsync(HugoWorld_Client.HL_Services.ItemDTO item) {
            return base.Channel.PickUpItemAsync(item);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="HL_Services.ITileImgService")]
    public interface ITileImgService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITileImgService/MonstreToTile", ReplyAction="http://tempuri.org/ITileImgService/MonstreToTileResponse")]
        HugoWorld_Client.HL_Services.TileImport MonstreToTile(HugoWorld_Client.HL_Services.MonstreDTO monstre);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITileImgService/MonstreToTile", ReplyAction="http://tempuri.org/ITileImgService/MonstreToTileResponse")]
        System.Threading.Tasks.Task<HugoWorld_Client.HL_Services.TileImport> MonstreToTileAsync(HugoWorld_Client.HL_Services.MonstreDTO monstre);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITileImgService/ItemToTile", ReplyAction="http://tempuri.org/ITileImgService/ItemToTileResponse")]
        HugoWorld_Client.HL_Services.TileImport ItemToTile(HugoWorld_Client.HL_Services.ItemDTO item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITileImgService/ItemToTile", ReplyAction="http://tempuri.org/ITileImgService/ItemToTileResponse")]
        System.Threading.Tasks.Task<HugoWorld_Client.HL_Services.TileImport> ItemToTileAsync(HugoWorld_Client.HL_Services.ItemDTO item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITileImgService/ObjetMondeToTile", ReplyAction="http://tempuri.org/ITileImgService/ObjetMondeToTileResponse")]
        HugoWorld_Client.HL_Services.TileImport ObjetMondeToTile(HugoWorld_Client.HL_Services.ObjetMondeDTO objet);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITileImgService/ObjetMondeToTile", ReplyAction="http://tempuri.org/ITileImgService/ObjetMondeToTileResponse")]
        System.Threading.Tasks.Task<HugoWorld_Client.HL_Services.TileImport> ObjetMondeToTileAsync(HugoWorld_Client.HL_Services.ObjetMondeDTO objet);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITileImgService/GetTileAt", ReplyAction="http://tempuri.org/ITileImgService/GetTileAtResponse")]
        HugoWorld_Client.HL_Services.TileImport GetTileAt(int x, int y, int mondeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITileImgService/GetTileAt", ReplyAction="http://tempuri.org/ITileImgService/GetTileAtResponse")]
        System.Threading.Tasks.Task<HugoWorld_Client.HL_Services.TileImport> GetTileAtAsync(int x, int y, int mondeId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITileImgServiceChannel : HugoWorld_Client.HL_Services.ITileImgService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TileImgServiceClient : System.ServiceModel.ClientBase<HugoWorld_Client.HL_Services.ITileImgService>, HugoWorld_Client.HL_Services.ITileImgService {
        
        public TileImgServiceClient() {
        }
        
        public TileImgServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TileImgServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TileImgServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TileImgServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public HugoWorld_Client.HL_Services.TileImport MonstreToTile(HugoWorld_Client.HL_Services.MonstreDTO monstre) {
            return base.Channel.MonstreToTile(monstre);
        }
        
        public System.Threading.Tasks.Task<HugoWorld_Client.HL_Services.TileImport> MonstreToTileAsync(HugoWorld_Client.HL_Services.MonstreDTO monstre) {
            return base.Channel.MonstreToTileAsync(monstre);
        }
        
        public HugoWorld_Client.HL_Services.TileImport ItemToTile(HugoWorld_Client.HL_Services.ItemDTO item) {
            return base.Channel.ItemToTile(item);
        }
        
        public System.Threading.Tasks.Task<HugoWorld_Client.HL_Services.TileImport> ItemToTileAsync(HugoWorld_Client.HL_Services.ItemDTO item) {
            return base.Channel.ItemToTileAsync(item);
        }
        
        public HugoWorld_Client.HL_Services.TileImport ObjetMondeToTile(HugoWorld_Client.HL_Services.ObjetMondeDTO objet) {
            return base.Channel.ObjetMondeToTile(objet);
        }
        
        public System.Threading.Tasks.Task<HugoWorld_Client.HL_Services.TileImport> ObjetMondeToTileAsync(HugoWorld_Client.HL_Services.ObjetMondeDTO objet) {
            return base.Channel.ObjetMondeToTileAsync(objet);
        }
        
        public HugoWorld_Client.HL_Services.TileImport GetTileAt(int x, int y, int mondeId) {
            return base.Channel.GetTileAt(x, y, mondeId);
        }
        
        public System.Threading.Tasks.Task<HugoWorld_Client.HL_Services.TileImport> GetTileAtAsync(int x, int y, int mondeId) {
            return base.Channel.GetTileAtAsync(x, y, mondeId);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="HL_Services.IHeroService")]
    public interface IHeroService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHeroService/AddHeroToDataBase", ReplyAction="http://tempuri.org/IHeroService/AddHeroToDataBaseResponse")]
        void AddHeroToDataBase(HugoWorld_Client.HL_Services.HeroDTO p_heroDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHeroService/AddHeroToDataBase", ReplyAction="http://tempuri.org/IHeroService/AddHeroToDataBaseResponse")]
        System.Threading.Tasks.Task AddHeroToDataBaseAsync(HugoWorld_Client.HL_Services.HeroDTO p_heroDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHeroService/SaveHeroPos", ReplyAction="http://tempuri.org/IHeroService/SaveHeroPosResponse")]
        void SaveHeroPos(int id, int x, int y);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHeroService/SaveHeroPos", ReplyAction="http://tempuri.org/IHeroService/SaveHeroPosResponse")]
        System.Threading.Tasks.Task SaveHeroPosAsync(int id, int x, int y);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHeroService/DeleteHeroById", ReplyAction="http://tempuri.org/IHeroService/DeleteHeroByIdResponse")]
        bool DeleteHeroById(int p_HeroId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHeroService/DeleteHeroById", ReplyAction="http://tempuri.org/IHeroService/DeleteHeroByIdResponse")]
        System.Threading.Tasks.Task<bool> DeleteHeroByIdAsync(int p_HeroId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHeroService/ConnectDisconnectHeroById", ReplyAction="http://tempuri.org/IHeroService/ConnectDisconnectHeroByIdResponse")]
        void ConnectDisconnectHeroById(int p_HeroId, bool p_State);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHeroService/ConnectDisconnectHeroById", ReplyAction="http://tempuri.org/IHeroService/ConnectDisconnectHeroByIdResponse")]
        System.Threading.Tasks.Task ConnectDisconnectHeroByIdAsync(int p_HeroId, bool p_State);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHeroService/IsHeroAvailable", ReplyAction="http://tempuri.org/IHeroService/IsHeroAvailableResponse")]
        bool IsHeroAvailable(int p_HeroId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHeroService/IsHeroAvailable", ReplyAction="http://tempuri.org/IHeroService/IsHeroAvailableResponse")]
        System.Threading.Tasks.Task<bool> IsHeroAvailableAsync(int p_HeroId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHeroService/GetHerosInChunk", ReplyAction="http://tempuri.org/IHeroService/GetHerosInChunkResponse")]
        HugoWorld_Client.HL_Services.HeroDTO[] GetHerosInChunk(int[][] chunk, int mondeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHeroService/GetHerosInChunk", ReplyAction="http://tempuri.org/IHeroService/GetHerosInChunkResponse")]
        System.Threading.Tasks.Task<HugoWorld_Client.HL_Services.HeroDTO[]> GetHerosInChunkAsync(int[][] chunk, int mondeID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IHeroServiceChannel : HugoWorld_Client.HL_Services.IHeroService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class HeroServiceClient : System.ServiceModel.ClientBase<HugoWorld_Client.HL_Services.IHeroService>, HugoWorld_Client.HL_Services.IHeroService {
        
        public HeroServiceClient() {
        }
        
        public HeroServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public HeroServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public HeroServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public HeroServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void AddHeroToDataBase(HugoWorld_Client.HL_Services.HeroDTO p_heroDTO) {
            base.Channel.AddHeroToDataBase(p_heroDTO);
        }
        
        public System.Threading.Tasks.Task AddHeroToDataBaseAsync(HugoWorld_Client.HL_Services.HeroDTO p_heroDTO) {
            return base.Channel.AddHeroToDataBaseAsync(p_heroDTO);
        }
        
        public void SaveHeroPos(int id, int x, int y) {
            base.Channel.SaveHeroPos(id, x, y);
        }
        
        public System.Threading.Tasks.Task SaveHeroPosAsync(int id, int x, int y) {
            return base.Channel.SaveHeroPosAsync(id, x, y);
        }
        
        public bool DeleteHeroById(int p_HeroId) {
            return base.Channel.DeleteHeroById(p_HeroId);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteHeroByIdAsync(int p_HeroId) {
            return base.Channel.DeleteHeroByIdAsync(p_HeroId);
        }
        
        public void ConnectDisconnectHeroById(int p_HeroId, bool p_State) {
            base.Channel.ConnectDisconnectHeroById(p_HeroId, p_State);
        }
        
        public System.Threading.Tasks.Task ConnectDisconnectHeroByIdAsync(int p_HeroId, bool p_State) {
            return base.Channel.ConnectDisconnectHeroByIdAsync(p_HeroId, p_State);
        }
        
        public bool IsHeroAvailable(int p_HeroId) {
            return base.Channel.IsHeroAvailable(p_HeroId);
        }
        
        public System.Threading.Tasks.Task<bool> IsHeroAvailableAsync(int p_HeroId) {
            return base.Channel.IsHeroAvailableAsync(p_HeroId);
        }
        
        public HugoWorld_Client.HL_Services.HeroDTO[] GetHerosInChunk(int[][] chunk, int mondeID) {
            return base.Channel.GetHerosInChunk(chunk, mondeID);
        }
        
        public System.Threading.Tasks.Task<HugoWorld_Client.HL_Services.HeroDTO[]> GetHerosInChunkAsync(int[][] chunk, int mondeID) {
            return base.Channel.GetHerosInChunkAsync(chunk, mondeID);
        }
    }
}
